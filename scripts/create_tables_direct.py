#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ fallback, –µ—Å–ª–∏ Alembic –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
"""
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from app.database import engine, Base
from app.models import User, OAuthAccount

def create_tables_direct():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQLAlchemy"""
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –Ω–∞–ø—Ä—è–º—É—é...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
        Base.metadata.create_all(bind=engine)
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω—ã
        with engine.connect() as connection:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
            result = connection.execute("SELECT COUNT(*) FROM users")
            users_count = result.fetchone()[0]
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'users' —Å–æ–∑–¥–∞–Ω–∞ (–∑–∞–ø–∏—Å–µ–π: {users_count})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É oauth_accounts
            result = connection.execute("SELECT COUNT(*) FROM oauth_accounts")
            oauth_count = result.fetchone()[0]
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'oauth_accounts' —Å–æ–∑–¥–∞–Ω–∞ (–∑–∞–ø–∏—Å–µ–π: {oauth_count})")
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}")
        return False

if __name__ == "__main__":
    success = create_tables_direct()
    sys.exit(0 if success else 1)
